services:
  app:
    container_name: ${APP_NAME}.app
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: php_${APP_ENV:-dev}
      args:
        timezone: ${TIMEZONE:-Europe/Moscow}
    restart: unless-stopped
    env_file:
      - .env
    working_dir: /app
    volumes:
      - .:/app
      - ./runtime:/app/runtime
    ports:
      - "${HYPERF_SERVER_PORT:-9501}:9501"
    command: ["php", "bin/hyperf.php", "start"]
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  composer:
    container_name: ${APP_NAME}.composer
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: composer
      args:
        timezone: ${TIMEZONE:-Europe/Moscow}
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - app-network
    profiles:
      - tools

  nginx:
    container_name: ${APP_NAME}.nginx
    image: nginx:alpine
    ports:
      - "${NGINX_PORT_HTTP:-80}:80"
      - "${NGINX_PORT_HTTPS:-443}:443"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - .:/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/hyperf.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  database:
    container_name: ${APP_NAME}.database
    build:
      context: docker/database
      dockerfile: Dockerfile
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-collider_user} -d ${DB_DATABASE:-collider_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE:-collider_db}
      POSTGRES_USER: ${DB_USERNAME:-collider_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-collider_secret}
      TZ: ${TIMEZONE:-Europe/Moscow}
    ports:
      - "${DB_PORTS:-5432:5432}"
    volumes:
      - .:/app
      - database-data:/var/lib/postgresql/data
      - ./docker/database/init:/docker-entrypoint-initdb.d
      - ./docker/database/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - app-network
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    shm_size: 16g
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: ${APP_NAME}.redis
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 15s
    env_file:
      - .env
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  database-data:
  redis-data:

networks:
  app-network:
    driver: bridge
